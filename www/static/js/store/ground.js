// Generated by CoffeeScript 1.12.7
(function() {
  var Hs, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.Hs || (root.Hs = {});

  Hs = root.Hs;

  Hs.login_scan_uri_uuid = null;

  $(function() {
    var stores_info, xialiwei_find_good, xialiwei_find_goods, xialiwei_goods_list, xialiwei_goods_list_load;
    console.log("msh ground");
    $("body").on("click", ".msh_area_bottom_btn", function(evt) {
      var dom, dom_action;
      dom = $(this);
      dom_action = dom.attr("data-action");
      $(".msh_area_bottom_btn").removeClass("btn_current");
      dom.addClass("btn_current");
      console.log("dom_action", dom_action);
      if (dom_action === "order") {
        return window.location.href = "/home/store/order";
      } else if (dom_action === "person") {
        return window.location.href = "/home/store/user/" + USER_ID;
      } else if (dom_action === "hollow") {
        return window.location.href = "/home/store/hollow";
      } else if (dom_action === "home") {
        return window.location.href = "/home/store/ground";
      }
    });
    xialiwei_find_good = function(chat_id, comment_id, store_id, add_num) {
      if (add_num == null) {
        add_num = 0;
      }
      return $.ajax({
        url: "/api/page/comment/load",
        type: "GET",
        dataType: "json",
        data: {
          chat_id: chat_id,
          comment_id: comment_id
        },
        success: function(data) {
          var _html, _html_price, _html_price_first, _html_prices, _html_prices_html, comment, comment_json, e, i, j, last_comment_id, len, line_through_class_str, ref, uuid_now;
          console.log(data);
          if (data.info === "ok") {
            ref = data.comments;
            for (i = ref.length - 1; i >= 0; i += -1) {
              comment = ref[i];
              comment_json = null;
              try {
                comment_json = JSON.parse(comment[4]);
              } catch (error) {
                e = error;
                continue;
              }
              if (comment_json !== null) {
                if (comment_json["json_type"] === "good_info") {
                  _html_prices = comment_json["promotion-item"];
                  _html_prices.push([1, comment_json["price-now"]]);
                  _html_prices.sort(function(a, b) {
                    return b[0] - a[0];
                  });
                  _html_price_first = true;
                  _html_prices_html = "";
                  for (j = 0, len = _html_prices.length; j < len; j++) {
                    _html_price = _html_prices[j];
                    line_through_class_str = "";
                    if (_html_price[0] === 1) {
                      line_through_class_str = "line_through";
                    }
                    _html_prices_html = _html_prices_html + "\n<div class=\"good_info_price " + line_through_class_str + "\" data-num=\"" + _html_price[0] + "\">\n    <span>" + comment_json["currency-now"] + "$</span>\n    <span>" + ((_html_price[1] / 100.0).toFixed(2)) + "</span>\n</div>";
                  }
                  uuid_now = uuid2(6, null);
                  _html = "<div class=\"ground_good_item\" data-add-num=\"" + add_num + "\" data-store=\"" + store_id + "\" data-product=\"" + chat_id + "\">\n    <div class=\"ground_good_item_info_top\">\n        <div class=\"ground_good_item_store_id\">0x" + store_id + "</div>\n        <div class=\"ground_good_item_store_score\">" + stores_info[store_id]["store_score"] + "</div>\n    </div>\n    <div class=\"ground_good_item_imgs\">\n        <img class=\"ground_good_item_img\" data-uuid=\"" + uuid_now + "\" src=\"" + comment_json["gallery-items"][0] + "\">\n        <script>\n            a_" + uuid_now + "_imgs_num = 0\n            a_" + uuid_now + "_imgs = " + (JSON.stringify(comment_json["gallery-items"])) + "\n            setInterval(function(){\n                a_" + uuid_now + "_imgs_num +=1\n                $(\".ground_good_item_img[data-uuid=" + uuid_now + "]\").attr(\"src\",a_" + uuid_now + "_imgs[a_" + uuid_now + "_imgs_num])\n                if (a_" + uuid_now + "_imgs_num > a_" + uuid_now + "_imgs.length -1){\n                    a_" + uuid_now + "_imgs_num = -1\n                }\n\n                },2000)\n        </script>\n    </div>\n    <div class=\"ground_good_item_info\">\n        <div class=\"good_info_name\">" + comment_json["product-name"] + "</div>\n        <div class=\"good_info_sell_num\">1000+</div>\n        " + _html_prices_html + "\n        <div class=\"good_info_relative\">\n            <div class=\"good_info_headimgurl\" data-store-id=\"" + store_id + "\">\n                <img class=\"good_info_headimgurl_img\" src=\"" + stores_info[store_id]["headimgurl"] + "\">\n            </div>\n            <div class=\"good_info_title\">" + comment_json["detail-box-title"] + "</div>\n        </div>\n    </div>\n</div>";
                  if (add_num % 2 === 0) {
                    $(".ground_goods_area_left").append(_html);
                  } else {
                    $(".ground_goods_area_right").append(_html);
                  }
                  return;
                }
              }
            }
            last_comment_id = data.last_comment_id;
            if (last_comment_id !== null) {
              return xialiwei_find_good(chat_id, last_comment_id);
            }
          } else if (data.info === "error") {

          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    xialiwei_goods_list = [];
    stores_info = {};
    xialiwei_goods_list_load = function() {
      var good_info, i, len, store_ids;
      store_ids = [];
      for (i = 0, len = xialiwei_goods_list.length; i < len; i++) {
        good_info = xialiwei_goods_list[i];
        store_ids.push(good_info["store"]);
      }
      return $.ajax({
        url: "/api/store/info",
        type: "POST",
        dataType: "json",
        data: {
          store_ids: JSON.stringify(store_ids)
        },
        success: function(data) {
          var a_good, a_store, a_user_id, good_info_add_num, j, k, len1, len2, ref, result, results;
          console.log(data);
          if (data.info === "ok") {
            ref = data.result;
            for (j = 0, len1 = ref.length; j < len1; j++) {
              result = ref[j];
              stores_info[result["store_id"]] = result;
            }
          }
          good_info_add_num = 0;
          results = [];
          for (k = 0, len2 = xialiwei_goods_list.length; k < len2; k++) {
            good_info = xialiwei_goods_list[k];
            a_user_id = good_info["owner"];
            a_store = good_info["store"];
            a_good = good_info["product"];
            xialiwei_find_good(a_good, null, a_store, good_info_add_num);
            results.push(good_info_add_num += 1);
          }
          return results;
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    xialiwei_find_goods = function(chat_id, comment_id) {
      return $.ajax({
        url: "/api/page/comment/load",
        type: "GET",
        dataType: "json",
        data: {
          chat_id: chat_id,
          comment_id: comment_id
        },
        success: function(data) {
          var comment, comment_json, e, i, last_comment_id, len, ref;
          console.log(data);
          if (data.info === "ok") {
            ref = data.comments;
            for (i = 0, len = ref.length; i < len; i++) {
              comment = ref[i];
              comment_json = null;
              try {
                comment_json = JSON.parse(comment[4]);
              } catch (error) {
                e = error;
                continue;
              }
              if (comment_json !== null) {
                xialiwei_goods_list.push(comment_json);
              }
            }
            last_comment_id = data.last_comment_id;
            if (last_comment_id === null) {
              return xialiwei_goods_list_load();
            } else {
              return xialiwei_find_goods(chat_id, last_comment_id);
            }
          } else if (data.info === "error") {

          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    xialiwei_find_goods("123e9e1c79a94786a961bd004a4ec71f", null);
    return $("body").on("click", ".ground_good_item", function(evt) {
      var new_blank, product_id, store_id;
      product_id = $(this).attr("data-product");
      store_id = $(this).attr("data-store");
      new_blank = window.open('_blank');
      if (new_blank === null) {
        return window.location.href = "/home/store/product/" + store_id + "/" + product_id;
      } else {
        return new_blank.location = "/home/store/product/" + store_id + "/" + product_id;
      }
    });
  });

}).call(this);
