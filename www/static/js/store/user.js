// Generated by CoffeeScript 1.12.7
(function() {
  var Hs, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.Hs || (root.Hs = {});

  Hs = root.Hs;

  Hs.login_scan_uri_uuid = null;

  $(function() {
    console.log("msh ground");
    $("body").on("click", ".msh_area_bottom_btn", function(evt) {
      var dom, dom_action;
      dom = $(this);
      dom_action = dom.attr("data-action");
      $(".msh_area_bottom_btn").removeClass("btn_current");
      dom.addClass("btn_current");
      console.log("dom_action", dom_action);
      if (dom_action === "order") {
        return window.location.href = "/home/store/order";
      } else if (dom_action === "person") {
        return window.location.href = "/home/store/user/" + USER_ID;
      } else if (dom_action === "hollow") {
        return window.location.href = "/home/store/hollow";
      } else if (dom_action === "home") {
        return window.location.href = "/home/store/ground";
      }
    });
    root.hollow_confirm_confirm_action = null;
    $("body").on("click", ".hollow_confirm_submit", function(evt) {
      var _action, _comment_id, _dom_area;
      if (root.hollow_confirm_confirm_action !== null) {
        console.log(root.hollow_confirm_confirm_action);
        _action = root.hollow_confirm_confirm_action[0];
        _dom_area = root.hollow_confirm_confirm_action[1];
        _comment_id = root.hollow_confirm_confirm_action[2];
        if (_action === "DEL") {
          console.log(_action);
        } else if (_action === "DELREMARK") {
          console.log(_action);
        } else if (_action === "GOTOLOGIN") {
          window.location.href = "/login?redirect_uri=" + encodeURIComponent(window.location.href);
        }
      }
      root.hollow_confirm_confirm_action = null;
      return $(".hollow_confirm_show_area").remove();
    });
    $("body").on("click", ".hollow_confirm_cancel", function(evt) {
      root.hollow_confirm_confirm_action = null;
      return $(".hollow_confirm_show_area").remove();
    });
    root.hollow_confirm_login = function(title, text, data_comment_id, remark_id) {
      if (title == null) {
        title = "Notice";
      }
      if (text == null) {
        text = "Do you confirm?";
      }
      if (data_comment_id == null) {
        data_comment_id = null;
      }
      if (remark_id == null) {
        remark_id = null;
      }
      $("body").append("<div class=\"hollow_confirm_show_area\">\n    <div class=\"hollow_confirm_show_area_card\">\n        <div class=\"hollow_confirm_show_area_card_title\">\n            <p>" + title + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_desc\">\n            <p>" + text + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_confirm_tools\">\n            <div class=\"hollow_confirm_cancel\">Cancel</div>\n            <div class=\"hollow_confirm_submit\">Confirm</div>\n        </div>\n    </div>\n</div>");
      return root.hollow_confirm_confirm_action = ["GOTOLOGIN", null, null];
    };
    root.hollow_confirm_is_subscribe = function(title, text, data_comment_id, remark_id) {
      if (title == null) {
        title = "Notice";
      }
      if (text == null) {
        text = "Do you confirm?";
      }
      if (data_comment_id == null) {
        data_comment_id = null;
      }
      if (remark_id == null) {
        remark_id = null;
      }
      return $("body").append("<div class=\"hollow_confirm_show_area\">\n    <div class=\"hollow_confirm_show_area_card\">\n        <div class=\"hollow_confirm_show_area_card_title\">\n            <p>" + title + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_desc\">\n            <p>" + text + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_confirm_tools\">\n            <div class=\"hollow_confirm_cancel\">I see.</div>\n        </div>\n    </div>\n</div>");
    };
    if (USER_ID.indexOf("no_login") > -1) {
      hollow_confirm_login("Notice", "No login, will you go with a account?");
    }
    root.load_stores_list_json = {};
    root.load_stores_list = function(owner_id) {
      return $.ajax({
        url: "/api/store/list",
        data: {
          user_id: owner_id
        },
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          var i, item, len, ref, results;
          console.log("=========");
          console.log(data);
          if (data.info === "ok") {
            ref = data.result;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              item = ref[i];
              load_stores_list_json[item["store_id"]] = item;
              results.push($(".store_user_info_store_list").append("<div class=\"store_line_card\">\n    <div class=\"store_line store_span\" data-store-id=\"" + item["store_id"] + "\">STORE ID: " + item["store_id"] + "</div>\n    <div class=\"store_line\">\n        <img class=\"store_headimgurl\" src=\"" + item["headimgurl"] + "\">\n        <div class=\"store_title\">" + item["title"] + "</div>\n        <div class=\"store_desc\">" + item["desc"] + "</div>\n    </div>\n</div>\n"));
            }
            return results;
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    return $(window).on("load", function() {
      return load_stores_list(BLOCK_ID);
    });
  });

}).call(this);
