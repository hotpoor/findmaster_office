// Generated by CoffeeScript 1.12.7
(function() {
  var Hs, root,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.Hs || (root.Hs = {});

  Hs = root.Hs;

  Hs.login_scan_uri_uuid = null;

  $(function() {
    var load_hollows, load_msh_topics_nums_list, load_msh_topics_nums_timer;
    console.log("msh hollow");
    root.调用弹出警告创 = function(内容) {
      if (内容 == null) {
        内容 = null;
      }
      return 弹出警告窗(内容);
    };
    root.弹出警告窗 = function(内容) {
      if (内容 == null) {
        内容 = null;
      }
      return alert(内容);
    };
    root.check_is_subscribe = function(app) {
      var is_subscribe, openid;
      if (app == null) {
        app = "" + FINDMASTER_APP;
      }
      openid = null;
      if (IS_WEIXIN) {
        $(".dev_log").append(JSON.stringify(WX_DATA));
        openid = WX_DATA["openid"];
      }
      is_subscribe = 0;
      return $.ajax({
        url: "/api/weixin/get_weixin_user_info",
        data: {
          app: app,
          openid: openid
        },
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          var cover_html, is_need_login_scan, login_scan_uri;
          is_need_login_scan = false;
          if (data.info === "ok") {
            console.log(data.data.subscribe);
            if (data.data.subscribe === void 0 || data.data.subscribe === null) {
              is_subscribe = 2;
            } else {
              is_subscribe = data.data.subscribe;
            }
          }
          if (!is_subscribe) {
            cover_html = "";
            if (IS_WEIXIN) {
              cover_html = "<div><img style=\"width:160px;\" src=\"http://msh-cdn0.qianshanghua.com/2290fcea343a43b4a4983f0d22231c39_fecad6c952c6546a772abed50cd81e1f?imageView2/2/w/300\"></div>\n<div><div style=\"color:#ccc;\">还没有关注公众号<br>记得扫码关注</div></div>";
            } else {
              if (USER_ID.indexOf("no_login:") > -1) {
                cover_html = "<div class=\"msh_qrcode_login_img_area\">\n    <img class=\"msh_qrcode_login_img\">\n    <div class=\"msh_qrcode_login_img_canvas_doms\" style=\"display:none;\"></div>\n</div>\n<div style=\"display:none;\"><button>没有关注，扫码关注登录</button></div>\n<div><div style=\"color:#ccc;\">微信扫码登录</div></div>";
                is_need_login_scan = true;
              } else {
                cover_html = "<div><img style=\"width:160px;\" src=\"http://msh-cdn0.qianshanghua.com/2290fcea343a43b4a4983f0d22231c39_fecad6c952c6546a772abed50cd81e1f?imageView2/2/w/300\"></div>\n<div><div style=\"color:#ccc;\">还没有关注公众号<br>记得扫码关注</div></div>";
              }
            }
            if ($(".msh_top_cover_card").length === 0) {
              hollow_confirm_is_subscribe("欢迎访问PUCO噗叩·时光机", cover_html);
            }
          }
          if (is_subscribe === 2) {
            cover_html = "微信ACCESS_TOKEN需更新，5秒记得刷新页面！";
            console.log("微信ACCESS_TOKEN需更新，5秒后再次请求！");
            setTimeout(function() {
              return root.check_is_subscribe(FINDMASTER_APP);
            }, 5000);
          }
          if (is_need_login_scan) {
            Hs.login_scan_uri_uuid = uuid2(6, null);
            login_scan_uri = HOST_URL + "/home/login_scan?room_id=MSH_USER&user_id=" + USER_ID + "&uuid=" + Hs.login_scan_uri_uuid + "&app=" + app;
            console.log(login_scan_uri);
            $(".msh_qrcode_login_img_canvas_doms").empty();
            $(".msh_qrcode_login_img_canvas_doms").qrcode(login_scan_uri);
            $(".msh_qrcode_login_img").attr("src", $(".msh_qrcode_login_img_canvas_doms>canvas").first()[0].toDataURL());
            return root.join_more_room_message_send("JOINMOREROOMS", USER_ID, "MSH USER", ["MSH_USER/" + USER_ID + "/" + Hs.login_scan_uri_uuid]);
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    $("body").on("click", ".remove_msh_top_cover_card", function(evt) {
      return $(".msh_top_cover_card").remove();
    });
    load_msh_topics_nums_timer = null;
    load_msh_topics_nums_list = [];
    root.load_msh_topics_nums = function(alist, timer) {
      clearTimeout(load_msh_topics_nums_timer);
      return load_msh_topics_nums_timer = setTimeout(function() {
        var url;
        url = "/api/page/count_connect_num_list";
        $.ajax({
          url: url,
          data: {
            aim_ids: JSON.stringify(alist)
          },
          dataType: 'json',
          type: 'GET',
          success: function(data) {
            var k, ref, results, v;
            console.log(data);
            if (data.info === "ok") {
              ref = data.result;
              results = [];
              for (k in ref) {
                v = ref[k];
                if (v.num === 0) {
                  results.push($(".msh_topic_line[data-block=" + k + "]").find(".onlinenum").attr("data-num0", v.num));
                } else {
                  results.push($(".msh_topic_line[data-block=" + k + "]").find(".onlinenum").removeAttr("data-num0"));
                }
              }
              return results;
            }
          },
          error: function(data) {
            return console.log(data);
          }
        });
        return load_msh_topics_nums(load_msh_topics_nums_list, timer);
      }, timer);
    };
    root.load_msh_topics = function() {
      var url;
      url = "/api/page/comment/load";
      return $.ajax({
        url: url,
        data: {
          chat_id: "514699f27bd142bd9ab6d4d1063fb314",
          comment_id: null
        },
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          var block_id, comment, content_json, headimgurl, i, j, len, len1, ref, title_list, title_list_item, title_list_show;
          console.log(data);
          $(".msh_topic_list").empty();
          if (data.info === "ok") {
            load_msh_topics_nums_list = [];
            ref = data.comments;
            for (i = 0, len = ref.length; i < len; i++) {
              comment = ref[i];
              content_json = JSON.parse(comment[4]);
              headimgurl = content_json["headimgurl"];
              title_list = content_json["title_list"];
              block_id = content_json["msh_hollow_block_id"];
              title_list_show = "";
              for (j = 0, len1 = title_list.length; j < len1; j++) {
                title_list_item = title_list[j];
                title_list_show = title_list_show + "\n" + title_list_item + "\n<br>";
              }
              $(".msh_topic_list").prepend("<div class=\"msh_line msh_topic_line\" data-block=\"" + block_id + "\">\n    <div class=\"msh_line_card w_82_h_auto\" align=\"center\">\n        <div class=\"msh_c_img_area onlinenum\">\n            <img class=\"msh_c_img\" src=\"" + headimgurl + "\">\n        </div>\n        <div class=\"msh_c_c_plus\">\n            <div class=\"msh_c_c_plus_icon\"></div>\n        </div>\n        <div class=\"msh_c_title\">" + title_list_show + "</div>\n    </div>\n</div>");
              load_msh_topics_nums_list.push(block_id);
            }
            $(".msh_topic_list").prepend("<div class=\"msh_line msh_topic_line\">\n    <a href=\"/\" target=\"_blank\">\n    <div class=\"msh_line_card w_82_h_auto\" align=\"center\" style=\"box-shadow: none;color: #333;\">\n        <div class=\"msh_c_img_area onlinenum_0\">\n            <img class=\"msh_c_img\" src=\"/static/img/msh_icon/logo.png\">\n        </div>\n        <div class=\"msh_c_c_plus\">\n            <div class=\"msh_c_c_plus_icon\"></div>\n        </div>\n        <div class=\"msh_c_title\">BACK HOME<br>返回主页</div>\n    </div>\n    </a>\n</div>");
            $(".msh_topic_list").prepend("<div class=\"msh_line msh_topic_line\">\n    <div class=\"msh_topic_list_left_fix\"></div>\n</div>");
            return load_msh_topics_nums(load_msh_topics_nums_list, 300000);
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    $("body").on("click", ".msh_topic_line", function(evt) {
      var aim_id, dom;
      dom = $(this);
      aim_id = dom.attr("data-block");
      if (aim_id !== (void 0) && aim_id !== null && aim_id !== "") {
        return window.location.href = "/home/msh/hollow/" + aim_id;
      } else {
        return window.location.href = "/";
      }
    });
    $("body").on("click", ".msh_area_bottom_btn", function(evt) {
      var dom, dom_action;
      dom = $(this);
      dom_action = dom.attr("data-action");
      $(".msh_area_bottom_btn").removeClass("btn_current");
      dom.addClass("btn_current");
      console.log("dom_action", dom_action);
      if (dom_action === "story") {
        if (IS_WEIXIN) {
          return window.location.href = "https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzkwNjI3NTUwMQ==&scene=124#wechat_redirect";
        } else {
          return window.location.href = "/home/page/689f864598af4ed29f705101c82bcc00";
        }
      } else if (dom_action === "person") {
        return window.location.href = "/home/page/25df4bb293d046fc8b35358f9cc0c017";
      } else if (dom_action === "home") {
        return window.location.href = "/home/page/f644eba0484b45c784b712f562dcc095";
      }
    });
    load_hollows = function(hollow_ids) {
      var hollow_id, i, len, results;
      results = [];
      for (i = 0, len = hollow_ids.length; i < len; i++) {
        hollow_id = hollow_ids[i];
        $(".msh_main_area").append("<div class=\"comments_area\" data-block=\"" + hollow_id + "\">\n    <div class=\"comments_submit_tools hide\" style=\"border-bottom: 1px solid #f2f2f2;padding-bottom: 20px;margin-bottom: 30px;\">\n        <div><textarea class=\"comment_content\" placeholder=\"Add some comment...\" style=\"resize:none;\"></textarea></div>\n        <div class=\"comment_submit_add_imgs hide\">\n            <div class=\"comment_submit_add_img_more\">\n                <div class=\"comment_submit_add_img_more_img\"></div>\n            </div>\n        </div>\n        <div style=\"display:flex;margin-top:5px;\">\n            <div><button class=\"comment_submit_add_img\"></button></div>\n            <div><button class=\"comment_submit\">发送</button></div>\n        </div>\n    </div>\n    <div class=\"comments hollow_comments\"></div>\n</div>");
        results.push(comment_load(hollow_id));
      }
      return results;
    };
    $(window).on("load", function(evt) {
      load_msh_topics();
      return load_hollows(HOLLOWS);
    });
    root.content_to_html = function(content) {
      var _current_weblink_html, _digest, _h, _thumb_url, _title, _w, base_width, by_secret_user, content_first, content_list, content_list_item, content_list_item_now, content_type, content_type_list, current_content_json, current_content_json_content, current_img, current_img_url, current_imgs, current_imgs_html, current_imgs_mod, e, error_img_url, i, imgurl, imgurl_json, j, l, len, len1, len2, len3, m, video_uuid, videourl, weblink_json;
      content_type_list = content.split("//");
      content_type = content_type_list[0];
      by_secret_user = null;
      if (content_type === "HWEBIMG" || content_type === "HWEBLINK" || content_type === "HWEBIMGS" || content_type === "HWEBVIDEO" || content_type === "HWEBVIDEOS") {
        if (content_type === "HWEBIMG") {
          imgurl = content.replace("HWEBIMG//", "");
          content = "<div class=\"content_img_area\"><img class=\"content_img card_webimg_thumb\" src=\"" + imgurl + "\"></div>";
        } else if (content_type === "HWEBIMGS") {
          try {
            imgurl_json = JSON.parse(content.replace("HWEBIMGS//", ""));
          } catch (error) {
            e = error;
            imgurl_json = {
              "content": "【该消息不支持显示】",
              "images": []
            };
          }
          current_content_json = imgurl_json["content"].split("[BYSECRETUSER]");
          current_content_json_content = current_content_json[0];
          if (current_content_json.length > 1) {
            try {
              by_secret_user = JSON.parse(current_content_json[1]);
            } catch (error) {
              e = error;
              by_secret_user = null;
            }
          }
          current_imgs = imgurl_json["images"];
          current_imgs_mod = current_imgs.length;
          base_width = $(".comments_area").width() - 90;
          if (current_imgs_mod === 0 || current_imgs_mod === 1) {
            current_imgs_mod = 1;
            _w = "width:75%;";
            _h = "height:auto;";
          } else if (current_imgs_mod === 2 || current_imgs_mod === 4) {
            current_imgs_mod = 2;
            _w = parseInt(base_width / (current_imgs_mod * 1.0) - 8);
            _h = _w;
            _w = "width:" + _w + "px;";
            _h = "height:" + _h + "px;";
          } else {
            current_imgs_mod = 3;
            _w = parseInt(base_width / (current_imgs_mod * 1.0) - 4);
            _h = _w;
            _w = "width:" + _w + "px;";
            _h = "height:" + _h + "px;";
          }
          current_imgs_html = "";
          for (i = 0, len = current_imgs.length; i < len; i++) {
            current_img = current_imgs[i];
            current_img_url = current_img.replace("HWEBIMG//", "");
            current_imgs_html = current_imgs_html + "<div class=\"content_img_cover\" style=\"" + _w + _h + "\"><img class=\"content_img card_webimg_thumb\" style=\"width:100%;height:100%;\" src=\"" + current_img_url + "\"></div>";
          }
          content_list = current_content_json_content.split("\n");
          content = "";
          content_first = true;
          for (j = 0, len1 = content_list.length; j < len1; j++) {
            content_list_item = content_list[j];
            content_list_item_now = content_list_item;
            content_list_item_now = root.ReplaceTag(content_list_item_now);
            content_list_item_now = root.ReplaceUrl(content_list_item_now);
            if (content_first) {
              content = "" + content_list_item_now;
              content_first = false;
            } else {
              content = content + "<br>" + content_list_item_now;
            }
          }
          content = "<div class=\"content_img_area\" data-num-" + current_imgs_mod + "=\"" + current_imgs_mod + "\">" + current_imgs_html + "</div>\n<div class=\"content_img_text\">" + content + "</div>";
        } else if (content_type === "HWEBVIDEO") {
          videourl = content.replace("HWEBVIDEO//", "");
          video_uuid = uuid2(6, null);
          content = "<div class=\"content_video_area\">\n<video id=\"player_" + video_uuid + "\"\n    class=\"video-js vjs-default-skin\"\n    poster = \"" + videourl + "?vframe/jpg/offset/0/\"\n    controls\n    webkit-playsinline=\"true\"\n    playsinline=\"true\"\n    style=\"width:100%;max-height:260px;min-height:200px;\"\n    >\n    <source src=\"" + videourl + "\" type=\"video/mp4\">\n    <!-- .m3u8 application/x-mpegURL -->\n</video>\n<script type=\"text/javascript\">\n    videojs('#player_" + video_uuid + "');\n</script>\n<div><a href=\"" + videourl + "\" target=\"_blank\" style=\"color:#999;font-size:12px;\">原视频链接</a></div>\n</div>\n";
        } else if (content_type === "HWEBLINK") {
          try {
            weblink_json = JSON.parse(content.replace("HWEBLINK//", ""));
          } catch (error) {
            e = error;
            weblink_json = {
              "content": "【该消息不支持显示】",
              "thumb_url": [],
              "title": "",
              "digest": "",
              "url": ""
            };
          }
          _thumb_url = weblink_json["thumb_url"];
          _title = weblink_json["title"];
          if (_title.replace(/\s/g, "") === "") {
            _title = "分享链接";
          }
          _digest = weblink_json["digest"];
          error_img_url = "http://msh-cdn0.qianshanghua.com/bf3dfd1f3af941d08e8ab802f88c28aa_d74dec75535984ff249527f7546c9bc1?imageView2";
          _current_weblink_html = "<a href=\"" + weblink_json["url"] + "\" target=\"_blank\">\n    <div class=\"card_hwxweblink\">\n        <div class=\"card_hwxweblink_thumb\"><img src=\"" + _thumb_url + "\" onerror=\"this.src='" + error_img_url + "'\"></div>\n        <div class=\"card_hwxweblink_title\">" + _title + "</div>\n        <div class=\"card_hwxweblink_digest\">" + _digest + "</div>\n    </div>\n</a>";
          current_content_json = weblink_json["content"].split("[BYSECRETUSER]");
          current_content_json_content = current_content_json[0];
          if (current_content_json.length > 1) {
            try {
              by_secret_user = JSON.parse(current_content_json[1]);
            } catch (error) {
              e = error;
              by_secret_user = null;
            }
          }
          content_list = current_content_json_content.split("\n");
          content = "";
          content_first = true;
          for (l = 0, len2 = content_list.length; l < len2; l++) {
            content_list_item = content_list[l];
            content_list_item_now = content_list_item;
            content_list_item_now = root.ReplaceTag(content_list_item_now);
            content_list_item_now = root.ReplaceUrl(content_list_item_now);
            if (content_first) {
              content = "" + content_list_item_now;
              content_first = false;
            } else {
              content = content + "<br>" + content_list_item_now;
            }
          }
          content = "<div class=\"content_weblink_area\" >" + _current_weblink_html + "</div>\n<div class=\"content_weblink_text\">" + content + "</div>";
        }
      } else {
        current_content_json = content.split("[BYSECRETUSER]");
        current_content_json_content = current_content_json[0];
        if (current_content_json.length > 1) {
          try {
            by_secret_user = JSON.parse(current_content_json[1]);
          } catch (error) {
            e = error;
            by_secret_user = null;
          }
        }
        content_list = current_content_json_content.split("\n");
        content = "";
        content_first = true;
        for (m = 0, len3 = content_list.length; m < len3; m++) {
          content_list_item = content_list[m];
          content_list_item_now = content_list_item;
          content_list_item_now = root.ReplaceTag(content_list_item_now);
          content_list_item_now = root.ReplaceUrl(content_list_item_now);
          if (content_first) {
            content = "" + content_list_item_now;
            content_first = false;
          } else {
            content = content + "<br>" + content_list_item_now;
          }
        }
      }
      return [content, by_secret_user];
    };
    root.comment_add_one_base = function(content_json) {
      var by_secret_user, comment_id, content, control_tools, date_html, fake_user_headimgurl, fake_user_name, html, ref, sequence, user_fake, user_fake_html, user_headimgurl, user_name;
      user_name = content_json["nickname"];
      content = content_json["content"];
      date_html = formatDateAllEn(content_json["time"] * 1000);
      user_headimgurl = content_json["headimgurl"];
      comment_id = content_json["comment_id"];
      sequence = content_json["sequence"];
      control_tools = "";
      if (IS_EDITOR || USER_ID === content_json["user_id"]) {
        control_tools = "<div class=\"comment_line\">\n    <div class=\"comment_del_action\"></div>\n    <button class=\"comment_control_tool_btn comment_del hide\">DEL</button>\n</div>";
      }
      ref = content_to_html(content), content = ref[0], by_secret_user = ref[1];
      user_fake_html = "";
      if (by_secret_user !== null) {
        user_fake = by_secret_user["fake"] !== void 0 ? by_secret_user["fake"] : "false";
        if (user_fake === "false") {
          fake_user_headimgurl = user_headimgurl;
          fake_user_name = user_name;
        } else {
          fake_user_headimgurl = "/static/img/msh_hollow/msh_mask.jpg";
          fake_user_name = "匿名";
        }
        user_fake_html = "<img class=\"fake_img\" src=\"" + fake_user_headimgurl + "\">";
        user_headimgurl = by_secret_user["headimgurl"];
        user_name = by_secret_user["name"];
      }
      html = "<div class=\"comment\" data-comment-id=\"" + comment_id + "_" + sequence + "\">\n    <div class=\"comment_img\"><img src=\"" + user_headimgurl + "\">" + user_fake_html + "</div>\n    " + control_tools + "\n    <div class=\"comment_line\">\n        <p class=\"p_name\"><span class=\"name\">" + user_name + "</span></p>\n        <p class=\"p_date\"><span class=\"date\">" + date_html + "</span></p>\n    </div>\n\n    <div class=\"comment_line\"><div class=\"content\">" + content + "</div></div>\n    <div class=\"comment_line\">\n        <div class=\"hollow_btn_tools\">\n            <div class=\"hollow_btn_tool hollow_btn_share comment_share_btn\">\n                <div class=\"hollow_btn_tool_icon hollow_btn_share_btn comment_share\"></div>\n                <div class=\"hollow_btn_tool_num hollow_btn_share_num comment_share_num\" data-value=\"0\"></div>\n            </div>\n            <div class=\"hollow_btn_tool hollow_btn_like comment_like_btn\">\n                <div class=\"hollow_btn_tool_icon hollow_btn_like_btn comment_like\"></div>\n                <div class=\"hollow_btn_tool_num hollow_btn_like_num comment_like_num\" data-value=\"0\">点赞</div>\n            </div>\n            <div class=\"hollow_btn_tool hollow_btn_remark comment_remark_btn\">\n                <div class=\"hollow_btn_tool_icon hollow_btn_remark_btn comment_remark\"></div>\n                <div class=\"hollow_btn_tool_num hollow_btn_remark_num comment_remark_num\" data-value=\"0\">评论</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"comment_line\">\n        <div class=\"hollow_remark_tools\">\n            <div class=\"hollow_remark_list\"></div>\n            <div class=\"hollow_remark_controls hide\">\n                <div class=\"remark_content_line\"><textarea class=\"remark_content\" placeholder=\"请输入评论\"></textarea></div>\n                <div class=\"remark_submit_line\"><button class=\"remark_submit\">发送</button></div>\n            </div>\n        </div>\n    </div>\n</div>";
      setTimeout(function() {
        return $(".comment[data-comment-id=" + comment_id + "_" + sequence + "]").addClass("comment_animate_show");
      }, 100);
      return html;
    };
    root.comment_add = function(content_json, chat_id) {
      var comment_html, comment_top_line;
      comment_html = comment_add_one_base(content_json);
      comment_top_line = $(".comments_area[data-block=" + chat_id + "]>.comments").find(".comment_top_line");
      if (comment_top_line.length < 1) {
        return $(".comments_area[data-block=" + chat_id + "]>.comments").prepend("" + comment_html);
      } else {
        return comment_top_line.after("" + comment_html);
      }
    };
    root.comment_load_one_base = function(comment_list, comment_id, comment_type) {
      var _html, by_secret_user, content, content_plus, control_tools, date_html, fake_user_headimgurl, fake_user_name, html, i, k, len, likes_current, likes_num, ref, ref1, ref2, ref3, ref_num, remark_item, remark_list_html, remarks, remarks_num, user_fake, user_fake_html, user_headimgurl, user_name, v;
      if (comment_type == null) {
        comment_type = "";
      }
      if (comment_list[6] === 1) {
        return "";
      }
      user_name = members[comment_list[1]]["name"];
      content = comment_list[4];
      content_plus = comment_list[5];
      if (content_plus === void 0 || content_plus === null) {
        content_plus = {
          "likes": [],
          "remarks": [],
          "ref_list": []
        };
      }
      if (content_plus["likes"] === void 0) {
        likes_num = 0;
        likes_current = "";
      } else {
        if (indexOf.call(content_plus["likes"], USER_ID) >= 0) {
          likes_current = "like";
        }
        likes_num = content_plus["likes"].length;
      }
      if (content_plus["remarks"] === void 0) {
        content_plus["remarks"] = [];
        remarks_num = 0;
      } else {
        remarks_num = content_plus["remarks"].length;
      }
      if (content_plus["ref_list"] === void 0) {
        content_plus["ref_list"] = [];
        ref_num = 0;
      } else {
        ref_num = content_plus["ref_list"].length;
      }
      if ((ref = comment_list[3]) === "COMMENT") {
        content = content;
      } else if ((ref1 = comment_list[3]) === "WEIXINPAYCALLBACKSUCCESS" || ref1 === "ALIPAYPAYCALLBACKSUCCESS") {
        content = ((function() {
          var results;
          results = [];
          for (k in content) {
            v = content[k];
            results.push("<div class=\"content_table\"><div>" + k + "</div><div>" + v + "</div></div>");
          }
          return results;
        })()).join("\n\r");
      }
      date_html = formatDateAllEn(comment_list[2] * 1000);
      user_headimgurl = members[comment_list[1]]["headimgurl"];
      remark_list_html = "";
      remarks = content_plus["remarks"];
      for (i = 0, len = remarks.length; i < len; i++) {
        remark_item = remarks[i];
        _html = comment_load_one_remark(remark_item);
        remark_list_html = "" + remark_list_html + _html;
      }
      control_tools = "";
      if ((ref2 = comment_list[3]) !== "WEIXINPAYCALLBACKSUCCESS" && ref2 !== "ALIPAYPAYCALLBACKSUCCESS") {
        if (IS_EDITOR || USER_ID === comment_list[1]) {
          control_tools = "<div class=\"comment_line\">\n    <div class=\"comment_del_action\"></div>\n    <button class=\"comment_control_tool_btn comment_del hide\">DEL</button>\n</div>";
        }
      }
      ref3 = content_to_html(content), content = ref3[0], by_secret_user = ref3[1];
      user_fake_html = "";
      if (by_secret_user !== null) {
        user_fake = by_secret_user["fake"] !== void 0 ? by_secret_user["fake"] : "false";
        if (user_fake === "false") {
          fake_user_headimgurl = user_headimgurl;
          fake_user_name = user_name;
        } else {
          fake_user_headimgurl = "/static/img/msh_hollow/msh_mask.jpg";
          fake_user_name = "匿名";
        }
        user_fake_html = "<img class=\"fake_img\" src=\"" + fake_user_headimgurl + "\">";
        user_headimgurl = by_secret_user["headimgurl"];
        user_name = by_secret_user["name"];
      }
      html = "<div class=\"comment " + comment_type + "\" data-comment-id=\"" + comment_id + "_" + comment_list[0] + "\">\n    <div class=\"comment_img\"><img src=\"" + user_headimgurl + "\">" + user_fake_html + "</div>\n    " + control_tools + "\n    <div class=\"comment_line\">\n        <p class=\"p_name\"><span class=\"name\">" + user_name + "</span></p>\n        <p class=\"p_date\"><span class=\"date\">" + date_html + "</span></p>\n        <div></div>\n    </div>\n    <div class=\"comment_line\"><div class=\"content\">" + content + "</div></div>\n    <div class=\"comment_line\">\n        <div class=\"hollow_btn_tools\">\n            <div class=\"hollow_btn_tool hollow_btn_share comment_share_btn\">\n                <div class=\"hollow_btn_tool_icon hollow_btn_share_btn comment_share\"></div>\n                <div class=\"hollow_btn_tool_num hollow_btn_share_num comment_share_num\" data-value=\"" + ref_num + "\">" + (num_change(ref_num, "")) + "</div>\n            </div>\n            <div class=\"hollow_btn_tool hollow_btn_like comment_like_btn\">\n                <div class=\"hollow_btn_tool_icon hollow_btn_like_btn comment_like " + likes_current + "\"></div>\n                <div class=\"hollow_btn_tool_num hollow_btn_like_num comment_like_num\" data-value=\"" + likes_num + "\">" + (num_change(likes_num, "点赞")) + "</div>\n            </div>\n            <div class=\"hollow_btn_tool hollow_btn_remark comment_remark_btn\">\n                <div class=\"hollow_btn_tool_icon hollow_btn_remark_btn comment_remark\"></div>\n                <div class=\"hollow_btn_tool_num hollow_btn_remark_num comment_remark_num\" data-value=\"" + remarks_num + "\">" + (num_change(remarks_num, "评论")) + "</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"comment_line\">\n        <div class=\"hollow_remark_tools\">\n            <div class=\"hollow_remark_list\">" + remark_list_html + "</div>\n            <div class=\"hollow_remark_controls hide\">\n                <div class=\"remark_content_line\"><textarea class=\"remark_content\" placeholder=\"请输入评论\"></textarea></div>\n                <div class=\"remark_submit_line\"><button class=\"remark_submit\">发送</button></div>\n            </div>\n        </div>\n    </div>\n</div>";
      setTimeout(function() {
        return $(".comment[data-comment-id=" + comment_id + "_" + comment_list[0] + "]").addClass("comment_animate_show");
      }, 100);
      return html;
    };
    root.hollow_confirm_confirm_action = null;
    root.hollow_confirm_share = function(show_html, title, text, data_comment_id, remark_id) {
      var _block_id, _chat_id, _comment_id, _comment_sequence, data_comment_id_list, desc, desc_title, img, imgs, link_title, name, redirect_uri, shareDataAppMessage, shareDataTimeline, web_title;
      if (show_html == null) {
        show_html = false;
      }
      if (title == null) {
        title = "微信分享预览";
      }
      if (text == null) {
        text = "";
      }
      if (data_comment_id == null) {
        data_comment_id = null;
      }
      if (remark_id == null) {
        remark_id = null;
      }
      link_title = $(".comment[data-comment-id=" + data_comment_id + "]").find(".content").text();
      web_title = document.title;
      name = $(".comment[data-comment-id=" + data_comment_id + "]").find(".comment_line").find(".p_name").text();
      desc_title = "【" + web_title + "】" + name;
      desc = link_title;
      imgs = $(".comment[data-comment-id=" + data_comment_id + "]").find(".content").find("img");
      if (imgs.length < 1) {
        img = $(".comment[data-comment-id=" + data_comment_id + "]").find(".comment_img").find("img").first().attr("src");
      } else {
        img = imgs.first().attr("src");
      }
      if (desc === "") {
        desc = "发布瞬间，与小伙伴们一起互动分享！";
      }
      _block_id = BLOCK_ID;
      _chat_id = $(".comment[data-comment-id=" + data_comment_id + "]").parents(".comments_area").attr("data-block");
      data_comment_id_list = data_comment_id.split("_");
      _comment_id = data_comment_id_list[0];
      _comment_sequence = data_comment_id_list[1];
      redirect_uri = "https://www.qianshanghua.com/home/msh/hollow/" + BLOCK_ID + "?chat_id=" + _chat_id + "&comment_id=" + _comment_id + "&comment_sequence=" + _comment_sequence + "&ref_id=" + USER_ID;
      shareDataTimeline = {
        title: "【" + web_title + "】" + link_title,
        link: redirect_uri,
        imgUrl: img,
        success: function() {
          return console.log("update shareDataTimeline success");
        }
      };
      shareDataAppMessage = {
        title: desc_title,
        desc: "" + (desc.replaceAll("\n", "").replaceAll("  ", "")),
        link: redirect_uri,
        imgUrl: img,
        success: function() {
          return console.log("update shareDataAppMessage success");
        }
      };
      console.log(shareDataAppMessage);
      wx.ready(function() {
        wx.updateAppMessageShareData(shareDataAppMessage);
        wx.updateTimelineShareData(shareDataTimeline);
        wx.onMenuShareAppMessage(shareDataAppMessage);
        return wx.onMenuShareTimeline(shareDataTimeline);
      });
      if (show_html) {
        return $("body").append("<div class=\"hollow_confirm_show_area\">\n    <div class=\"hollow_confirm_show_area_card\">\n        <div class=\"hollow_confirm_show_area_card_title\">\n            <p>" + title + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_desc\">\n            <div>\n                <div style=\"font-size:14px;\">预览·分享到朋友圈</div>\n                <div style=\"display: flex;justify-content: center;margin: 5px;\">\n                    <div style=\"display: flex;align-items: center;background: #f2f2f2;width:100%;max-width: 320px;\">\n                        <div style=\"margin: 5px;height: 40px;\"><img src=\"" + img + "\"\n                            style=\"width: 40px;height:40px;object-fit:cover;\"></div>\n                        <div style=\"text-align: left;padding: 0px 5px;color: #333;width: -webkit-fill-available;max-height: 40px;overflow: hidden;max-width: 290px;font-size: 12px;line-height:20px;\">\n                            <div style=\"\">【" + web_title + "】" + link_title + "</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div align=\"center\">\n                <div style=\"font-size:14px;margin-top: 15px;\">预览·发送给朋友</div>\n                    <div style=\"padding: 5px;border: 1px solid #e2e2e2;border-radius: 6px;margin: 5px;max-width:320px;\">\n                        <div style=\"text-align: left;font-size: 16px;color: #333;\">" + desc_title + "</div>\n                        <div style=\"display: flex;\">\n                            <div style=\"font-size: 12px;text-align: left;height: 50px;overflow: hidden;width: -webkit-fill-available;\">" + desc + "</div>\n                            <div style=\"width: 50px;height: 50px;\"><img\n                                src=\"" + img + "\"\n                                style=\"object-fit: cover;width: 50px;height: 50px;\">\n                            </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <div style=\"font-size:16px;margin-top: 15px;color: #4caf50;\">微信网页版分享方法<br>请点击右上角<span style=\"color: black;margin: 5px;\">...</span>进行分享</div>\n            </div>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_confirm_tools\">\n            <div class=\"hollow_confirm_cancel\">我知道了</div>\n        </div>\n    </div>\n    <div class=\"hollow_confirm_share_area_arrow\">\n        <img style=\"width:100%;height:auto;\" src=\"/static/img/msh_icon/share_arrow.png\">\n    </div>\n</div>");
      }
    };
    root.hollow_confirm_is_subscribe = function(title, text, data_comment_id, remark_id) {
      if (title == null) {
        title = "欢迎访问PUCO噗叩·时光机";
      }
      if (text == null) {
        text = "是否确认？";
      }
      if (data_comment_id == null) {
        data_comment_id = null;
      }
      if (remark_id == null) {
        remark_id = null;
      }
      return $("body").append("<div class=\"hollow_confirm_show_area\">\n    <div class=\"hollow_confirm_show_area_card\">\n        <div class=\"hollow_confirm_show_area_card_title\">\n            <p>" + title + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_desc\">\n            <p>" + text + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_confirm_tools\">\n            <div class=\"hollow_confirm_cancel\">我知道了</div>\n        </div>\n    </div>\n</div>");
    };
    root.hollow_confirm_del = function(dom_area, title, text, data_comment_id, remark_id) {
      if (title == null) {
        title = "提示";
      }
      if (text == null) {
        text = "是否确认？";
      }
      if (data_comment_id == null) {
        data_comment_id = null;
      }
      if (remark_id == null) {
        remark_id = null;
      }
      $("body").append("<div class=\"hollow_confirm_show_area\">\n    <div class=\"hollow_confirm_show_area_card\">\n        <div class=\"hollow_confirm_show_area_card_title\">\n            <p>" + title + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_desc\">\n            <p>" + text + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_confirm_tools\">\n            <div class=\"hollow_confirm_cancel\">取消</div>\n            <div class=\"hollow_confirm_submit\">确认</div>\n        </div>\n    </div>\n</div>");
      if (data_comment_id !== null) {
        if (remark_id === null) {
          return root.hollow_confirm_confirm_action = ["DEL", dom_area, data_comment_id];
        } else {
          return root.hollow_confirm_confirm_action = ["DELREMARK", dom_area, data_comment_id, remark_id];
        }
      }
    };
    $("body").on("click", ".comment_del_action", function(evt) {
      var data_comment_id, del_dom_area, del_dom_area_del, dom;
      dom = $(this);
      del_dom_area = dom.parents(".comment_line");
      data_comment_id = dom.parents(".comment").attr("data-comment-id");
      del_dom_area_del = del_dom_area.find(".comment_del");
      return hollow_confirm_del(del_dom_area, "提示", "删除该树洞瞬间？", data_comment_id, console.log(del_dom_area, "提示", "是否删除树洞瞬间内容？", data_comment_id));
    });
    $("body").on("click", ".remark_del_action", function(evt) {
      var data_comment_id, data_remark_id, del_dom_area, del_dom_area_del, del_remark_dom_area, dom;
      dom = $(this);
      del_dom_area = dom.parents(".comment_line");
      data_comment_id = dom.parents(".comment").attr("data-comment-id");
      del_dom_area_del = del_dom_area.find(".comment_del");
      del_remark_dom_area = dom.parents(".remark_line");
      data_remark_id = del_remark_dom_area.attr("data-remark-id");
      hollow_confirm_del(del_dom_area, "提示", "删除该树洞瞬间的留言？", data_comment_id, data_remark_id);
      console.log(del_dom_area, "提示", "是否删除该树洞瞬间的留言？", data_comment_id, data_remark_id);
      evt.stopPropagation();
      return evt.preventDefault();
    });
    $("body").on("click", ".hollow_confirm_submit", function(evt) {
      var _action, _comment_id, _dom_area, _remark_id;
      if (root.hollow_confirm_confirm_action !== null) {
        console.log(root.hollow_confirm_confirm_action);
        _action = root.hollow_confirm_confirm_action[0];
        _dom_area = root.hollow_confirm_confirm_action[1];
        _comment_id = root.hollow_confirm_confirm_action[2];
        if (_action === "DEL") {
          $(".comment[data-comment-id=" + _comment_id + "]").animate({
            "height": 0
          });
          $(".comment[data-comment-id=" + _comment_id + "]").addClass("comment_animate_hide");
          (function(_dom_area, _comment_id) {
            return setTimeout(function() {
              return _dom_area.parents(".comment").find(".comment_del").click();
            }, 1000);
          })(_dom_area, _comment_id);
        } else if (_action === "DELREMARK") {
          _remark_id = root.hollow_confirm_confirm_action[3];
          (function(_dom_area, _comment_id, _remark_id) {
            return _dom_area.parents(".comment").find(".remark_line[data-remark-id=" + _remark_id + "]").find(".remark_line_del").click();
          })(_dom_area, _comment_id, _remark_id);
        }
      }
      root.hollow_confirm_confirm_action = null;
      return $(".hollow_confirm_show_area").remove();
    });
    $("body").on("click", ".hollow_confirm_cancel", function(evt) {
      root.hollow_confirm_confirm_action = null;
      return $(".hollow_confirm_show_area").remove();
    });
    $("body").on("click", ".comment_remark_btn", function(evt) {
      var _this, dom, dom_comment, dom_remark_content, remark_controls;
      _this = $(this);
      dom = _this.find(".comment_remark");
      dom_comment = dom.parents(".comment");
      remark_controls = dom_comment.find(".hollow_remark_controls");
      remark_controls.removeClass("hide");
      dom_remark_content = remark_controls.find(".remark_content");
      $(".remark_content").removeClass("current");
      dom_remark_content.addClass("current");
      return (function(dom_remark_content) {
        return setTimeout(function() {
          return $("html").animate({
            scrollTop: dom_remark_content.offset().top - 120
          }, 250, function() {
            $(window).scrollTop(dom_remark_content.offset().top - 120);
            return dom_remark_content.focus();
          });
        }, 250);
      })(dom_remark_content);
    });
    $("body").on("click", ".hollow_btn_share_btn", function(evt) {
      var data_comment_id, dom;
      dom = $(this);
      data_comment_id = dom.parents(".comment").attr("data-comment-id");
      return hollow_confirm_share(true, "微信分享预览", "", data_comment_id);
    });
    root.comment_load_one_ref_add = function() {
      var content;
      if ((CHAT_ID === "None") || (COMMENT_ID === "None") || (COMMENT_SEQUENCE === "None") || (REF_ID === "None")) {
        return;
      }
      hollow_confirm_share(false, "微信分享预览", "", COMMENT_ID + "_" + COMMENT_SEQUENCE);
      content = "ref add remark comment " + COMMENT_ID + "_" + COMMENT_SEQUENCE;
      return $.ajax({
        url: "/api/page/comment/ref_add",
        data: {
          block_id: BLOCK_ID,
          chat_id: CHAT_ID,
          content: content,
          comment_id: COMMENT_ID,
          comment_sequence: COMMENT_SEQUENCE,
          remark_id: REMARK_ID,
          uuid: uuid2(6, null),
          ref_id: REF_ID
        },
        dataType: 'json',
        type: 'POST',
        success: function(data) {
          var aim_btn, aim_dom, aim_value, aim_value_dom;
          console.log(data);
          if (data.info === "ok") {
            aim_dom = $(".comments_area[data-block=" + CHAT_ID + "]>.comments").find(".comment[data-comment-id=" + COMMENT_ID + "_" + COMMENT_SEQUENCE + "]");
            aim_btn = aim_dom.find(".comment_share");
            aim_value_dom = aim_dom.find(".comment_share_num");
            aim_value = parseInt(data.ref_num);
            if (aim_value <= 0) {
              aim_value_dom.attr("data-value", "0");
              return aim_value_dom.text("");
            } else {
              aim_value_dom.attr("data-value", aim_value);
              return aim_value_dom.text(num_change(aim_value));
            }
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    root.comment_load_one_from_share = function() {
      if ((CHAT_ID === "None") || (COMMENT_ID === "None") || (COMMENT_SEQUENCE === "None")) {
        return;
      }
      return $.ajax({
        url: "/api/page/comment/load_one",
        data: {
          block_id: BLOCK_ID,
          chat_id: CHAT_ID,
          comment_id: COMMENT_ID,
          comment_sequence: COMMENT_SEQUENCE,
          remark_id: REMARK_ID
        },
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          var comment, comment_html, comment_top_line, i, k, ref, ref1, v;
          if (data.info === "ok") {
            ref = data.members;
            for (k in ref) {
              v = ref[k];
              members[k] = v;
            }
            comment_top_line = $(".comments_area[data-block=" + CHAT_ID + "]>.comments").find(".comment_top_line");
            if (comment_top_line.length < 1) {
              $(".comments_area[data-block=" + CHAT_ID + "]>.comments").prepend("<div class=\"comment_top_line\"></div>");
            }
            if (data.comments.length === 0) {
              $(".comments_area[data-block=" + CHAT_ID + "]>.comments").prepend("<div class=\"comment_type_flag\" data-comment-id=\"" + COMMENT_ID + "_" + COMMENT_SEQUENCE + "\"><span class=\"span_comment_type_share\">分享</span></div>\n<div class=\"comment_type_flag\" data-comment-id=\"" + COMMENT_ID + "_" + COMMENT_SEQUENCE + "\"\n    style=\"border-bottom:1px solid #f2f2f2;text-align:center;\"><img style=\"width:100%;max-width:300px;\" src=\"/static/img/msh_hollow/msh_not_found.jpg\"></div>");
            }
            ref1 = data.comments;
            for (i = ref1.length - 1; i >= 0; i += -1) {
              comment = ref1[i];
              comment_html = comment_load_one_base(comment, data.comment_id, "comment_type_share");
              $(".comments_area[data-block=" + CHAT_ID + "]>.comments").prepend("<div class=\"comment_type_flag\" data-comment-id=\"" + COMMENT_ID + "_" + COMMENT_SEQUENCE + "\"><span class=\"span_comment_type_share\">分享</span></div>\n" + comment_html);
            }
            return comment_load_one_ref_add();
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    $("body").on("click", ".card_webimg_thumb", function(evt) {
      var _dom, current, dom, doms, i, len, url, urls;
      urls = [];
      doms = $(".card_webimg_thumb");
      dom = $(this);
      dom.addClass("current");
      current = dom.attr("src");
      if (current.indexOf("msh-cdn0.qianshanghua.com") >= 0) {
        current = current.split("?")[0] + "?imageView2";
      }
      if (current.indexOf("?") >= 0) {
        current = current + "&a=current";
      }
      for (i = 0, len = doms.length; i < len; i++) {
        _dom = doms[i];
        url = $(_dom).attr("src");
        if (url.indexOf("msh-cdn0.qianshanghua.com") >= 0) {
          url = url.split("?")[0] + "?imageView2";
        }
        if ($(_dom).hasClass("current")) {
          if (url.indexOf("?") >= 0) {
            url = url + "&a=current";
          }
          $(_dom).removeClass("current");
        }
        urls.push(url);
      }
      return wx.previewImage({
        current: current,
        urls: urls
      });
    });
    root.hollow_confirm_show_add_comment_area = function(title, text, data_comment_id, remark_id) {
      if (title == null) {
        title = "发布瞬间";
      }
      if (text == null) {
        text = "是否确认？";
      }
      if (data_comment_id == null) {
        data_comment_id = null;
      }
      if (remark_id == null) {
        remark_id = null;
      }
      return $("body").append("<div class=\"hollow_confirm_show_area\">\n    <div class=\"hollow_confirm_show_area_card\">\n        <div class=\"hollow_confirm_show_area_card_title\">\n            <p>" + title + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_desc\">\n            <p>" + text + "</p>\n        </div>\n        <div class=\"hollow_confirm_show_area_card_confirm_tools\">\n            <div class=\"hollow_confirm_cancel\">我知道了</div>\n        </div>\n    </div>\n</div>");
    };
    $("body").on("click", ".show_add_comment_area", function(evt) {
      return $.ajax({
        url: "/api/msh/level/check",
        data: null,
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          var _html;
          if (data.info === "ok") {
            if (data.msh_qrcodepackage_num < 1) {
              _html = "<div>您还没有达到开通等级哟</div>";
              return hollow_confirm_show_add_comment_area("发布瞬间", _html);
            } else {
              $(".comments_submit_tools").removeClass("hide");
              if ($(".comments_submit_tools").length > 0) {
                $(".comments_submit_tools")[0].scrollIntoViewIfNeeded();
                return $(".comments_submit_tools").find(".comment_content").focus();
              }
            }
          } else {
            _html = "<div>尚未登录</div>";
            return hollow_confirm_show_add_comment_area("发布瞬间", _html);
          }
        },
        error: function(data) {
          var _html;
          _html = "<div>您还没有达到开通等级哟</div>";
          return hollow_confirm_show_add_comment_area("发布瞬间", _html);
        }
      });
    });
    root.comment_submit = function(dom) {
      var _img, _imgs, chat_id, comment_submit_add_img_one_list, content, i, json_data, json_data_str, len;
      chat_id = dom.parents(".comments_area").attr("data-block");
      content = dom.parents(".comments_area").find(".comment_content").val();
      comment_submit_add_img_one_list = $(".comment_submit_add_imgs").find(".comment_submit_add_img_one");
      if (comment_submit_add_img_one_list.length > 0) {
        _imgs = [];
        for (i = 0, len = comment_submit_add_img_one_list.length; i < len; i++) {
          _img = comment_submit_add_img_one_list[i];
          _imgs.push($(_img).find(".comment_submit_add_img_one_img").attr("src"));
        }
        json_data = {
          content: content,
          images: _imgs
        };
        json_data_str = JSON.stringify(json_data);
        content = "HWEBIMGS//" + json_data_str;
      }
      return $.ajax({
        url: "/api/page/comment/submit",
        data: {
          block_id: BLOCK_ID,
          chat_id: chat_id,
          content: content,
          uuid: uuid2(6, null)
        },
        dataType: 'json',
        type: 'POST',
        success: function(data) {
          console.log(JSON.stringify(data));
          if (data.info === "ok") {
            dom.parents(".comments_area").find(".comment_content").val("");
            $(".comment_submit_add_imgs").addClass("hide");
            $(".comment_submit_add_imgs").find(".comment_submit_add_img_one").remove();
          }
          if (data.info === "error") {
            return alert(data.about);
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    $("body").on("click", ".del_one", function(evt) {
      var dom, dom_img_current;
      dom = $(this);
      dom_img_current = dom.parents(".comment_submit_add_img_one");
      return dom_img_current.remove();
    });
    return $(window).on("load", function(evt) {
      return comment_load_one_from_share();
    });
  });

}).call(this);
