// Generated by CoffeeScript 1.12.7
(function() {
  var Hs, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.Hs || (root.Hs = {});

  Hs = root.Hs;

  Hs.current_block_infos_json = {};

  $(function() {
    var load_block_infos, load_dashboard_map, load_dict_with_list, load_office_dashboard, update_dom_when_key_up_timer;
    console.log("start");
    load_block_infos = function(block_ids, query_num, current_block_infos_json) {
      var action_ids, action_list, divide_num, i, j, l, len, mod_num, ref, result_num, results;
      if (query_num == null) {
        query_num = 10;
      }
      if (current_block_infos_json == null) {
        current_block_infos_json = {};
      }
      action_list = [];
      mod_num = block_ids.length % query_num;
      divide_num = block_ids.length / query_num;
      if (mod_num === 0) {
        result_num = parseInt(divide_num);
      } else {
        result_num = parseInt(divide_num) + 1;
      }
      for (i = j = 0, ref = result_num - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
        action_list.push(block_ids.slice(i * query_num, (i + 1) * query_num));
      }
      results = [];
      for (l = 0, len = action_list.length; l < len; l++) {
        action_ids = action_list[l];
        console.log(action_ids);
        results.push($.ajax({
          url: "/api/office/block_infos",
          data: {
            block_ids: JSON.stringify(action_ids)
          },
          dataType: 'json',
          type: 'GET',
          success: function(data) {
            var desc, k, ref1, results1, subtype, title, v;
            console.log(data);
            ref1 = data.result_json;
            results1 = [];
            for (k in ref1) {
              v = ref1[k];
              current_block_infos_json[k] = v;
              title = v["title"] === "" ? "Title" : v["title"];
              desc = v["desc"] === "" ? "desc" : v["desc"];
              subtype = v["subtype"];
              if (subtype === "office_folder") {
                $(".office_item[data-id=" + k + "]>.office_item_info>.office_item_title").text(title);
                results1.push($(".office_item[data-id=" + k + "]>.office_item_info>.office_item_desc").text(desc));
              } else if (subtype === "page") {
                $(".office_item[data-id=" + k + "]>a>.office_item_info>.office_item_title").text(title);
                results1.push($(".office_item[data-id=" + k + "]>a>.office_item_info>.office_item_desc").text(desc));
              } else {
                results1.push(void 0);
              }
            }
            return results1;
          },
          error: function(data) {
            return console.log(data);
          }
        }));
      }
      return results;
    };
    load_dict_with_list = function(list_now, html, num) {
      var _html_items, html_item, i, i_keys, j, len;
      if (html == null) {
        html = "";
      }
      if (num == null) {
        num = 0;
      }
      for (j = 0, len = list_now.length; j < len; j++) {
        i = list_now[j];
        if (typeof i === 'object') {
          i_keys = Object.keys(i);
          _html_items = "";
          _html_items = load_dict_with_list(i[i_keys[0]], _html_items, num + 1);
          html_item = "<div class=\"office_item folder\" data-num=\"" + num + "\" data-id=\"" + i_keys[0] + "\">\n    <div class=\"office_item_id\">block_id: " + i_keys[0] + "</div>\n    <div class=\"office_item_info\">\n        <img class=\"office_item_logo close\" src=\"/static/img/office/icon/folder.png\">\n        <img class=\"office_item_logo open hide\" src=\"/static/img/office/icon/folder_open.png\">\n        <div class=\"office_item_title\">TITLE</div>\n        <div class=\"office_item_desc\">desc</div>\n        <div class=\"office_item_edit\" data-now=\"edit\">编辑</div>\n    </div>\n    <div class=\"office_items hide\">" + _html_items + "</div>\n</div>";
        } else {
          html_item = "<div class=\"office_item file\" data-num=\"" + num + "\" data-id=\"" + i + "\">\n    <div class=\"office_item_id\">block_id: " + i + "</div>\n    <a href=\"/home/page/edit/" + i + "\">\n    <div class=\"office_item_info\">\n        <img class=\"office_item_logo\" src=\"/static/img/office/icon/page.png\">\n        <div class=\"office_item_title\">TITLE</div>\n        <div class=\"office_item_desc\">desc</div>\n        <div class=\"office_item_edit\" data-now=\"edit\">编辑</div>\n    </div>\n    </a>\n</div>";
        }
        html = html + "\n" + html_item;
      }
      return html;
    };
    load_dashboard_map = function(dashboard_map) {
      var _html;
      if (dashboard_map == null) {
        dashboard_map = [];
      }
      _html = "";
      _html = load_dict_with_list(dashboard_map, _html);
      return $(".office_dashboard").append(_html);
    };
    load_office_dashboard = function() {
      $(".office_dashboard").empty();
      return $.ajax({
        url: "/api/office/list",
        data: null,
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          var block_ids;
          console.log(data);
          if (data.info === "ok") {
            block_ids = data.block_ids;
            load_dashboard_map(data.dashboard_map);
            return load_block_infos(block_ids, 20, Hs.current_block_infos_json);
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    $(window).on("load", function(evt) {
      return load_office_dashboard();
    });
    $("body").on("click", ".office_item.folder>.office_item_info", function(evt) {
      var dom, dom_id, ref;
      dom = $(this);
      if ((ref = dom.find(".office_item_edit").first().attr("data-now")) === "done") {
        return false;
      }
      if (dom.parents(".office_item.folder").first().find(".office_items").first().hasClass("hide")) {
        dom.parents(".office_item.folder").first().find(".office_items").first().removeClass("hide");
        dom.find(".office_item_logo.close").addClass("hide");
        dom.find(".office_item_logo.open").removeClass("hide");
        dom_id = dom.parents(".office_item.folder").first().attr("data-id");
        return dom.append("<div class=\"office_add_area\">\n    <div class=\"office_add_btn_action\"></div>\n    <div class=\"office_add_btns hide\" data-aim-folder-id=\"" + dom_id + "\">\n        <div class=\"office_add_btn no_border_top\" data-type=\"folder\">新建文件夹</div>\n        <div class=\"office_add_btn\" data-type=\"excel\">新建表格</div>\n        <div class=\"office_add_btn\" data-type=\"doc\">新建文稿</div>\n        <div class=\"office_add_btn\" data-type=\"page\">新建主页</div>\n    </div>\n</div>");
      } else {
        dom.parents(".office_item.folder").first().find(".office_items").first().addClass("hide");
        dom.find(".office_item_logo.close").removeClass("hide");
        dom.find(".office_item_logo.open").addClass("hide");
        return dom.find(".office_add_area").first().remove();
      }
    });
    $("body").on("click", ".office_add_btn_action", function(evt) {
      var dom;
      dom = $(this);
      if (dom.parents(".office_add_area").first().find(".office_add_btns").first().hasClass("hide")) {
        $(".office_add_btns").addClass("hide");
        dom.parents(".office_add_area").first().find(".office_add_btns").first().removeClass("hide");
      } else {
        dom.parents(".office_add_area").first().find(".office_add_btns").first().addClass("hide");
      }
      evt.stopPropagation();
      evt.preventDefault();
      return false;
    });
    $("body").on("click", ".office_add_btn", function(evt) {
      var aim_folder_id, dom, dom_type;
      dom = $(this);
      dom_type = dom.attr("data-type");
      aim_folder_id = dom.parents(".office_add_btns").first().attr("data-aim-folder-id");
      if (aim_folder_id === "") {
        aim_folder_id = null;
      }
      if (dom_type === "folder" || dom_type === "page") {
        $.ajax({
          url: "/api/office/add_" + dom_type,
          data: {
            title: null,
            desc: null,
            aim_folder_id: aim_folder_id
          },
          dataType: 'json',
          type: 'POST',
          success: function(data) {
            var _html, block_id, folder_id, num, obj, obj1;
            console.log(data);
            if (data.info === "ok") {
              if (dom_type === "folder") {
                folder_id = data.folder_id;
                if (aim_folder_id === null) {
                  _html = "";
                  _html = load_dict_with_list([
                    (
                      obj = {},
                      obj["" + folder_id] = [],
                      obj
                    )
                  ], _html, 0);
                  $(".office_dashboard").prepend(_html);
                } else {
                  num = parseInt($(".office_item[data-id=" + aim_folder_id + "]").attr("data-num")) + 1;
                  _html = "";
                  _html = load_dict_with_list([
                    (
                      obj1 = {},
                      obj1["" + folder_id] = [],
                      obj1
                    )
                  ], _html, num);
                  $(".office_item[data-id=" + aim_folder_id + "]>.office_items").prepend(_html);
                }
                return load_block_infos(["" + folder_id], 20, Hs.current_block_infos_json);
              } else if (dom_type === "page") {
                block_id = data.block_id;
                if (aim_folder_id === null) {
                  _html = "";
                  _html = load_dict_with_list(["" + block_id], _html, 0);
                  $(".office_dashboard").prepend(_html);
                } else {
                  num = parseInt($(".office_item[data-id=" + aim_folder_id + "]").attr("data-num")) + 1;
                  _html = "";
                  _html = load_dict_with_list(["" + block_id], _html, num);
                  $(".office_item[data-id=" + aim_folder_id + "]>.office_items").prepend(_html);
                }
                return load_block_infos(["" + block_id], 20, Hs.current_block_infos_json);
              }
            }
          },
          error: function(data) {
            return console.log(data);
          }
        });
      }
      evt.stopPropagation();
      evt.preventDefault();
      return false;
    });
    $("body").on("click", ".office_item_edit", function(evt) {
      var dom, href_old, ref, ref1;
      dom = $(this);
      if ((ref = dom.attr("data-now")) === "edit") {
        dom.text("完成");
        dom.attr("data-now", "done");
        dom.parents(".office_item_info").first().find(".office_item_title,.office_item_desc").attr("contenteditable", "true");
        dom.parents(".office_item_info").first().find(".office_item_title,.office_item_desc").css("cursor", "text");
        if (dom.parents(".office_item_info").first().parents("a").first().length > 0) {
          href_old = dom.parents(".office_item_info").first().parents("a").first().attr("href");
          dom.parents(".office_item_info").first().parents("a").first().attr("href", "#" + href_old);
        }
      } else if ((ref1 = dom.attr("data-now")) === "done") {
        dom.text("编辑");
        dom.attr("data-now", "edit");
        dom.parents(".office_item_info").first().find(".office_item_title,.office_item_desc").attr("contenteditable", "false");
        dom.parents(".office_item_info").first().find(".office_item_title,.office_item_desc").css("cursor", "pointer");
        if (dom.parents(".office_item_info").first().parents("a").first().length > 0) {
          href_old = dom.parents(".office_item_info").first().parents("a").first().attr("href");
          href_old.replace("#", "");
          dom.parents(".office_item_info").first().parents("a").first().attr("href", "" + href_old);
        }
      }
      evt.stopPropagation();
      evt.preventDefault();
      return false;
    });
    update_dom_when_key_up_timer = null;
    $("body").on("keydown", ".office_item_title,.office_item_desc", function(evt) {
      return clearTimeout(update_dom_when_key_up_timer);
    });
    return $("body").on("keyup", ".office_item_title,.office_item_desc", function(evt) {
      var dom, ref;
      dom = $(this);
      if ((ref = dom.parents(".office_item_info").first().find(".office_item_edit").first().attr("data-now")) === "done") {
        clearTimeout(update_dom_when_key_up_timer);
        return update_dom_when_key_up_timer = setTimeout(function() {
          var block_id, key, value;
          console.log("update_dom_when_key_up_timer");
          block_id = dom.parents(".office_item").first().attr("data-id");
          if (dom.hasClass("office_item_title")) {
            key = "title";
          } else if (dom.hasClass("office_item_desc")) {
            key = "desc";
          } else {
            return;
          }
          value = dom.text();
          return $.ajax({
            url: "/api/office/update_info",
            data: {
              key: key,
              value: value,
              block_id: block_id
            },
            dataType: 'json',
            type: 'POST',
            success: function(data) {
              return console.log(data);
            },
            error: function(data) {
              return console.log(data);
            }
          });
        }, 1000);
      }
    });
  });

}).call(this);
